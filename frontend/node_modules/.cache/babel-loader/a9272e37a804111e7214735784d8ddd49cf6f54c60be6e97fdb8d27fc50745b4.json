{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-djangoproject\\\\frontend\\\\src\\\\components\\\\Commuinty.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Community() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true); // Add this state variable\n\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/api/posts/`).then(response => {\n      const newPosts = response.data.results;\n      if (newPosts.length === 0) {\n        setHasMore(false); // No more items to load\n      } else {\n        setPosts([...posts, ...newPosts]);\n      }\n    }).catch(error => console.error(error));\n  }, []);\n  const loadMore = () => {\n    setPage(page + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: posts.length,\n    next: loadMore,\n    hasMore: hasMore // Use the hasMore state variable here\n    ,\n    loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this),\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Community, \"Q+Sbk1Xhypju3I3NjCvPsFx8o9I=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["axios","useState","useEffect","InfiniteScroll","jsxDEV","_jsxDEV","Community","_s","posts","setPosts","page","setPage","hasMore","setHasMore","get","then","response","newPosts","data","results","length","catch","error","console","loadMore","dataLength","next","loader","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","content","id","_c","$RefreshReg$"],"sources":["D:/Web Development/React-djangoproject/frontend/src/components/Commuinty.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nfunction Community() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true); // Add this state variable\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/posts/`)\r\n      .then((response) => {\r\n        const newPosts = response.data.results;\r\n        if (newPosts.length === 0) {\r\n          setHasMore(false); // No more items to load\r\n        } else {\r\n          setPosts([...posts, ...newPosts]);\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  const loadMore = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={posts.length}\r\n      next={loadMore}\r\n      hasMore={hasMore} // Use the hasMore state variable here\r\n      loader={<h4>Loading...</h4>}\r\n    >\r\n      {posts.map((post) => (\r\n        <div key={post.id}>\r\n          <h2>{post.title}</h2>\r\n          <p>{post.content}</p>\r\n        </div>\r\n      ))}\r\n    </InfiniteScroll>\r\n  );\r\n}\r\nexport default Community;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACdF,KAAK,CACFc,GAAG,CAAE,kCAAiC,CAAC,CACvCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAI,CAACC,OAAO;MACtC,IAAIF,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;QACzBP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACLJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,GAAGS,QAAQ,CAAC,CAAC;MACnC;IACF,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACrBb,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACnB,CAAC;EAED,oBACEL,OAAA,CAACF,cAAc;IACbsB,UAAU,EAAEjB,KAAK,CAACY,MAAO;IACzBM,IAAI,EAAEF,QAAS;IACfZ,OAAO,EAAEA,OAAQ,CAAC;IAAA;IAClBe,MAAM,eAAEtB,OAAA;MAAAuB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;IAAAJ,QAAA,EAE3BpB,KAAK,CAACyB,GAAG,CAAEC,IAAI,iBACd7B,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,EAAKM,IAAI,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACrB3B,OAAA;QAAAuB,QAAA,EAAIM,IAAI,CAACE;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAFbE,IAAI,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIlB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACa;AAErB;AAACzB,EAAA,CAtCQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAuClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}