{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-djangoproject\\\\frontend\\\\src\\\\components\\\\Comment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment(_ref) {\n  _s();\n  let {\n    post\n  } = _ref;\n  const [content, setContent] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [error, setError] = useState(null);\n  const handleAddComment = event => {\n    event.preventDefault();\n    const data = {\n      content\n    };\n    const user_id = post.id; // assuming post is a prop passed to the Comment component\n    const url = \"http://127.0.0.1:8000/api/comments/create/1\";\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n    };\n    try {\n      const response = axios.post(url, data, {\n        headers\n      });\n      console.log(response.data);\n      setComments([...comments, response.data]); // add new comment to existing list of comments\n      setContent(\"\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddComment,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: content,\n        onChange: event => setContent(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"n+7uXAwltKhKC62vNjeYrRfTHdc=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Comment","_ref","_s","post","content","setContent","comments","setComments","error","setError","handleAddComment","event","preventDefault","data","user_id","id","url","headers","Authorization","localStorage","getItem","response","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/Web Development/React-djangoproject/frontend/src/components/Comment.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nfunction Comment({ post }) {\r\n  const [content, setContent] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleAddComment = (event) => {\r\n    event.preventDefault();\r\n    const data = { content };\r\n    const user_id = post.id; // assuming post is a prop passed to the Comment component\r\n    const url = \"http://127.0.0.1:8000/api/comments/create/1\";\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\r\n    };\r\n    try {\r\n      const response = axios.post(url, data, { headers });\r\n      console.log(response.data);\r\n      setComments([...comments, response.data]); // add new comment to existing list of comments\r\n      setContent(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"comments-section\">\r\n      <h3>Comments</h3>\r\n      <ul>\r\n        {comments.map((comment) => (\r\n          <li key={comment.id}>\r\n            <p>{comment.content}</p>\r\n            {/* <span>{comment.user.username}</span> */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={handleAddComment}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a comment...\"\r\n          value={content}\r\n          onChange={(event) => setContent(event.target.value)}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n        {error && <div className=\"error\">{error}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}