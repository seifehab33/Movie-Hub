{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-djangoproject\\\\frontend\\\\src\\\\components\\\\Comment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentForm = _ref => {\n  _s();\n  let {\n    postId,\n    userId,\n    setComments,\n    setError\n  } = _ref;\n  const [content, setContent] = useState(\"\");\n  const handleSubmitComment = async event => {\n    event.preventDefault();\n    const url = `http://127.0.0.1:8000/api/users/${userId}/posts/${postId}/comments/create/`;\n    const data = {\n      content,\n      user: userId,\n      post: postId\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n    };\n    try {\n      const response = await axios.post(url, data, {\n        headers\n      });\n      console.log(response.data);\n      setComments(prevComments => [...prevComments, response.data]);\n      setContent(\"\"); // clear the content input\n    } catch (error) {\n      console.error(error.response);\n      setError(error.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmitComment,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\",\n        children: \"Add a comment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"content\",\n        value: content,\n        onChange: event => setContent(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentForm, \"KPwtwb4lt1NZxOwnjhyyIoKb9lQ=\");\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CommentForm","_ref","_s","postId","userId","setComments","setError","content","setContent","handleSubmitComment","event","preventDefault","url","data","user","post","headers","Authorization","localStorage","getItem","response","console","log","prevComments","error","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","type","_c","$RefreshReg$"],"sources":["D:/Web Development/React-djangoproject/frontend/src/components/Comment.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CommentForm = ({ postId, userId, setComments, setError }) => {\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleSubmitComment = async (event) => {\r\n    event.preventDefault();\r\n    const url = `http://127.0.0.1:8000/api/users/${userId}/posts/${postId}/comments/create/`;\r\n    const data = { content, user: userId, post: postId };\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\r\n    };\r\n    try {\r\n      const response = await axios.post(url, data, { headers });\r\n      console.log(response.data);\r\n      setComments((prevComments) => [...prevComments, response.data]);\r\n      setContent(\"\"); // clear the content input\r\n    } catch (error) {\r\n      console.error(error.response);\r\n      setError(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmitComment}>\r\n      <div>\r\n        <label htmlFor=\"content\">Add a comment:</label>\r\n        <textarea\r\n          id=\"content\"\r\n          value={content}\r\n          onChange={(event) => setContent(event.target.value)}\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGC,IAAA,IAA+C;EAAAC,EAAA;EAAA,IAA9C;IAAEC,MAAM;IAAEC,MAAM;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAAL,IAAA;EAC5D,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,mBAAmB,GAAG,MAAOC,KAAK,IAAK;IAC3CA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,GAAG,GAAI,mCAAkCR,MAAO,UAASD,MAAO,mBAAkB;IACxF,MAAMU,IAAI,GAAG;MAAEN,OAAO;MAAEO,IAAI,EAAEV,MAAM;MAAEW,IAAI,EAAEZ;IAAO,CAAC;IAEpD,MAAMa,OAAO,GAAG;MACd,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAE;IAChE,CAAC;IACD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACkB,IAAI,CAACH,GAAG,EAAEC,IAAI,EAAE;QAAEG;MAAQ,CAAC,CAAC;MACzDK,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACP,IAAI,CAAC;MAC1BR,WAAW,CAAEkB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,QAAQ,CAACP,IAAI,CAAC,CAAC;MAC/DL,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAACJ,QAAQ,CAAC;MAC7Bd,QAAQ,CAACkB,KAAK,CAACJ,QAAQ,CAACP,IAAI,CAACW,KAAK,CAAC;IACrC;EACF,CAAC;EAED,oBACEzB,OAAA;IAAM0B,QAAQ,EAAEhB,mBAAoB;IAAAiB,QAAA,gBAClC3B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAO4B,OAAO,EAAC,SAAS;QAAAD,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC/ChC,OAAA;QACEiC,EAAE,EAAC,SAAS;QACZC,KAAK,EAAE1B,OAAQ;QACf2B,QAAQ,EAAGxB,KAAK,IAAKF,UAAU,CAACE,KAAK,CAACyB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACNhC,OAAA;MAAQqC,IAAI,EAAC,QAAQ;MAAAV,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChC;AAEX,CAAC;AAAC7B,EAAA,CApCIF,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}