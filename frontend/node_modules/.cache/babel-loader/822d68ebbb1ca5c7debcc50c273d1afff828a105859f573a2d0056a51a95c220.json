{"ast":null,"code":"function AsyncResolvers(onFailedOne, onResolvedAll) {\n  this.onResolvedAll = onResolvedAll;\n  this.onFailedOne = onFailedOne;\n  this.resolvers = {};\n  this.resolversCount = 0;\n  this.passed = [];\n  this.failed = [];\n  this.firing = false;\n}\nAsyncResolvers.prototype = {\n  /**\n   * Add resolver\n   *\n   * @param {Rule} rule\n   * @return {integer}\n   */\n  add: function (rule) {\n    var index = this.resolversCount;\n    this.resolvers[index] = rule;\n    this.resolversCount++;\n    return index;\n  },\n  /**\n   * Resolve given index\n   *\n   * @param  {integer} index\n   * @return {void}\n   */\n  resolve: function (index) {\n    var rule = this.resolvers[index];\n    if (rule.passes === true) {\n      this.passed.push(rule);\n    } else if (rule.passes === false) {\n      this.failed.push(rule);\n      this.onFailedOne(rule);\n    }\n    this.fire();\n  },\n  /**\n   * Determine if all have been resolved\n   *\n   * @return {boolean}\n   */\n  isAllResolved: function () {\n    return this.passed.length + this.failed.length === this.resolversCount;\n  },\n  /**\n   * Attempt to fire final all resolved callback if completed\n   *\n   * @return {void}\n   */\n  fire: function () {\n    if (!this.firing) {\n      return;\n    }\n    if (this.isAllResolved()) {\n      this.onResolvedAll(this.failed.length === 0);\n    }\n  },\n  /**\n   * Enable firing\n   *\n   * @return {void}\n   */\n  enableFiring: function () {\n    this.firing = true;\n  }\n};\nmodule.exports = AsyncResolvers;","map":{"version":3,"names":["AsyncResolvers","onFailedOne","onResolvedAll","resolvers","resolversCount","passed","failed","firing","prototype","add","rule","index","resolve","passes","push","fire","isAllResolved","length","enableFiring","module","exports"],"sources":["D:/Web Development/React-djangoproject/frontend/node_modules/validatorjs/src/async.js"],"sourcesContent":["function AsyncResolvers(onFailedOne, onResolvedAll) {\n  this.onResolvedAll = onResolvedAll;\n  this.onFailedOne = onFailedOne;\n  this.resolvers = {};\n  this.resolversCount = 0;\n  this.passed = [];\n  this.failed = [];\n  this.firing = false;\n}\n\nAsyncResolvers.prototype = {\n\n  /**\n   * Add resolver\n   *\n   * @param {Rule} rule\n   * @return {integer}\n   */\n  add: function(rule) {\n    var index = this.resolversCount;\n    this.resolvers[index] = rule;\n    this.resolversCount++;\n    return index;\n  },\n\n  /**\n   * Resolve given index\n   *\n   * @param  {integer} index\n   * @return {void}\n   */\n  resolve: function(index) {\n    var rule = this.resolvers[index];\n    if (rule.passes === true) {\n      this.passed.push(rule);\n    } else if (rule.passes === false) {\n      this.failed.push(rule);\n      this.onFailedOne(rule);\n    }\n\n    this.fire();\n  },\n\n  /**\n   * Determine if all have been resolved\n   *\n   * @return {boolean}\n   */\n  isAllResolved: function() {\n    return (this.passed.length + this.failed.length) === this.resolversCount;\n  },\n\n  /**\n   * Attempt to fire final all resolved callback if completed\n   *\n   * @return {void}\n   */\n  fire: function() {\n\n    if (!this.firing) {\n      return;\n    }\n\n    if (this.isAllResolved()) {\n      this.onResolvedAll(this.failed.length === 0);\n    }\n\n  },\n\n  /**\n   * Enable firing\n   *\n   * @return {void}\n   */\n  enableFiring: function() {\n    this.firing = true;\n  }\n\n};\n\nmodule.exports = AsyncResolvers;\n"],"mappings":"AAAA,SAASA,cAAcA,CAACC,WAAW,EAAEC,aAAa,EAAE;EAClD,IAAI,CAACA,aAAa,GAAGA,aAAa;EAClC,IAAI,CAACD,WAAW,GAAGA,WAAW;EAC9B,IAAI,CAACE,SAAS,GAAG,CAAC,CAAC;EACnB,IAAI,CAACC,cAAc,GAAG,CAAC;EACvB,IAAI,CAACC,MAAM,GAAG,EAAE;EAChB,IAAI,CAACC,MAAM,GAAG,EAAE;EAChB,IAAI,CAACC,MAAM,GAAG,KAAK;AACrB;AAEAP,cAAc,CAACQ,SAAS,GAAG;EAEzB;AACF;AACA;AACA;AACA;AACA;EACEC,GAAG,EAAE,SAAAA,CAASC,IAAI,EAAE;IAClB,IAAIC,KAAK,GAAG,IAAI,CAACP,cAAc;IAC/B,IAAI,CAACD,SAAS,CAACQ,KAAK,CAAC,GAAGD,IAAI;IAC5B,IAAI,CAACN,cAAc,EAAE;IACrB,OAAOO,KAAK;EACd,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE,SAAAA,CAASD,KAAK,EAAE;IACvB,IAAID,IAAI,GAAG,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC;IAChC,IAAID,IAAI,CAACG,MAAM,KAAK,IAAI,EAAE;MACxB,IAAI,CAACR,MAAM,CAACS,IAAI,CAACJ,IAAI,CAAC;IACxB,CAAC,MAAM,IAAIA,IAAI,CAACG,MAAM,KAAK,KAAK,EAAE;MAChC,IAAI,CAACP,MAAM,CAACQ,IAAI,CAACJ,IAAI,CAAC;MACtB,IAAI,CAACT,WAAW,CAACS,IAAI,CAAC;IACxB;IAEA,IAAI,CAACK,IAAI,EAAE;EACb,CAAC;EAED;AACF;AACA;AACA;AACA;EACEC,aAAa,EAAE,SAAAA,CAAA,EAAW;IACxB,OAAQ,IAAI,CAACX,MAAM,CAACY,MAAM,GAAG,IAAI,CAACX,MAAM,CAACW,MAAM,KAAM,IAAI,CAACb,cAAc;EAC1E,CAAC;EAED;AACF;AACA;AACA;AACA;EACEW,IAAI,EAAE,SAAAA,CAAA,EAAW;IAEf,IAAI,CAAC,IAAI,CAACR,MAAM,EAAE;MAChB;IACF;IAEA,IAAI,IAAI,CAACS,aAAa,EAAE,EAAE;MACxB,IAAI,CAACd,aAAa,CAAC,IAAI,CAACI,MAAM,CAACW,MAAM,KAAK,CAAC,CAAC;IAC9C;EAEF,CAAC;EAED;AACF;AACA;AACA;AACA;EACEC,YAAY,EAAE,SAAAA,CAAA,EAAW;IACvB,IAAI,CAACX,MAAM,GAAG,IAAI;EACpB;AAEF,CAAC;AAEDY,MAAM,CAACC,OAAO,GAAGpB,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}