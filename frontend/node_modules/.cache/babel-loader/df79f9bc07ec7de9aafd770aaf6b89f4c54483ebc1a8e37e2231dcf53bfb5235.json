{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\React-djangoproject\\\\frontend\\\\src\\\\components\\\\Comment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment(_ref) {\n  _s();\n  let {\n    post\n  } = _ref;\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [error, setError] = useState(null);\n  const handleAddComment = event => {\n    event.preventDefault();\n    const data = {\n      post: post.id,\n      content: comment\n    };\n    axios.post(`http://127.0.0.1:8000/api/comments/create/1`, data).then(response => {\n      setComments([...comments, response.data]);\n      setComment(\"\");\n    }).catch(error => {\n      console.log(error);\n      setError(\"Failed to add comment\");\n    });\n  };\n\n  //   useEffect(() => {\n  //     axios\n  //       .get(`http://127.0.0.1:8000/api/posts/${post.id}/comments/`)\n  //       .then((response) => {\n  //         setComments(response.data);\n  //       })\n  //       .catch((error) => console.error(error));\n  //   }, [post.id]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddComment,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: comment,\n        onChange: event => setComment(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"57zUdMXUdxkZuUkpv7w96sEZ4j4=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Comment","_ref","_s","post","comment","setComment","comments","setComments","error","setError","handleAddComment","event","preventDefault","data","id","content","then","response","catch","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","username","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/Web Development/React-djangoproject/frontend/src/components/Comment.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nfunction Comment({ post }) {\r\n  const [comment, setComment] = useState(\"\");\r\n  const [comments, setComments] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleAddComment = (event) => {\r\n    event.preventDefault();\r\n    const data = { post: post.id, content: comment };\r\n    axios\r\n      .post(`http://127.0.0.1:8000/api/comments/create/1`, data)\r\n      .then((response) => {\r\n        setComments([...comments, response.data]);\r\n        setComment(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(\"Failed to add comment\");\r\n      });\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     axios\r\n  //       .get(`http://127.0.0.1:8000/api/posts/${post.id}/comments/`)\r\n  //       .then((response) => {\r\n  //         setComments(response.data);\r\n  //       })\r\n  //       .catch((error) => console.error(error));\r\n  //   }, [post.id]);\r\n\r\n  return (\r\n    <div className=\"comments-section\">\r\n      <h3>Comments</h3>\r\n      <ul>\r\n        {comments.map((comment) => (\r\n          <li key={comment.id}>\r\n            <p>{comment.content}</p>\r\n            <span>{comment.user.username}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={handleAddComment}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a comment...\"\r\n          value={comment}\r\n          onChange={(event) => setComment(event.target.value)}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n        {error && <div className=\"error\">{error}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}